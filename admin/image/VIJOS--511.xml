<?xml version="1.0" encoding="UTF-8"?>
 <fps version="1.2">
<item>
<title ><![CDATA[VIJOS-P1054]]></title>
<description ><![CDATA[&nbsp &nbsp &nbsp &nbsp John计划为他的牛场建一个围栏，以限制奶牛们的活动。他有N种可以建造围栏的木料，长度分别是l1,l2…lN，每种长度的木料无限。修建时，他将把所有选中的木料拼接在一起，因此围栏的长度就是他使用的木料长度之和。但是聪明的John很快发现很多长度都是不能由这些木料长度相加得到的，于是决定在必要的时候把这些木料砍掉一部分以后再使用。不过由于John比较节约，他给自己规定：任何一根木料最多只能削短M米。当然，每根木料削去的木料长度不需要都一样。不过由于测量工具太原始，John只能准确的削去整数米的木料，因此，如果他有两种长度分别是7和11的木料，每根最多只能砍掉1米，那么实际上就有4种可以使用的木料长度，分别是6,&nbsp 7,&nbsp 10,&nbsp 11。
&nbsp &nbsp &nbsp &nbsp Clevow是John的牛场中的最聪明的奶牛，John请她来设计围栏。Clevow不愿意自己和同伴在游戏时受到围栏的限制，于是想刁难一下John，希望John的木料无论经过怎样的加工，长度之和都不可能得到她设计的围栏总长度。
&nbsp &nbsp &nbsp &nbsp 不过Clevow知道，如果围栏的长度太小，John很快就能发现它是不能修建好的。因此她希望得到你的帮助，找出无法修建的最大围栏长度。
]]></description>
<input ><![CDATA[&nbsp &nbsp &nbsp &nbsp 输入的第一行包含两个整数N,&nbsp M&nbsp (1&lt; N&lt; 100,&nbsp 0&lt; M&lt; 3000)，分别表示木料的种类和每根木料削去的最大值。以下各行每行一个整数li(1&lt; li&lt; 3000),表示第i根木料的原始长度。]]></input>
<output ><![CDATA[&nbsp &nbsp &nbsp &nbsp 输出仅一行，包含一个整数，表示不能修建的最大围栏长度。如果任何长度的围栏都可以修建或者这个最大值不存在，输出-1。

]]></output>
<sample_input ><![CDATA[2 1
7 
11
]]></sample_input>
<sample_output ><![CDATA[15
]]></sample_output>
<time_limit ><![CDATA[各个测试点1秒
]]></time_limit>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[128]]></memory_limit>
<hint ><![CDATA[]]></hint>
<source ><![CDATA[WinterCamp&nbsp 2002
]]></source>
<test_input ><![CDATA[10 1000
10
20
30
40
50
60
70
80
90
100
]]></test_input>
<test_input ><![CDATA[50 10
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
]]></test_input>
<test_input ><![CDATA[6 5
1656
222
1323
2200
220
1324
]]></test_input>
<test_input ><![CDATA[6 1
235
1235
235
246
2685
2133
]]></test_input>
<test_input ><![CDATA[2 1
7
11
]]></test_input>
<test_input ><![CDATA[50 4
102
141
146
173
198
239
279
289
310
315
343
365
405
449
462
486
519
523
544
569
603
624
642
656
666
691
714
760
804
811
851
859
859
902
927
949
991
1021
1066
1090
1123
1151
1189
1215
1227
1262
1265
1298
1342
1349
]]></test_input>
<test_input ><![CDATA[100 998
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
]]></test_input>
<test_input ><![CDATA[9 0
111
222
333
444
555
666
777
888
999
]]></test_input>
<test_input ><![CDATA[2 100
3000
2500
]]></test_input>
<test_input ><![CDATA[100 2
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
888
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
777
]]></test_input>
<test_input ><![CDATA[4 1
2345
2344
2342
2341
]]></test_input>
<test_input ><![CDATA[99 5
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
2789
2788
2787
]]></test_input>
<test_output ><![CDATA[-1
]]></test_output>
<test_output ><![CDATA[894009
]]></test_output>
<test_output ><![CDATA[4445
]]></test_output>
<test_output ><![CDATA[4445
]]></test_output>
<test_output ><![CDATA[15
]]></test_output>
<test_output ><![CDATA[360
]]></test_output>
<test_output ><![CDATA[1
]]></test_output>
<test_output ><![CDATA[-1
]]></test_output>
<test_output ><![CDATA[11599
]]></test_output>
<test_output ><![CDATA[42515
]]></test_output>
<test_output ><![CDATA[1095119
]]></test_output>
<test_output ><![CDATA[1107235
]]></test_output>
</item>
</fps>
